name: CI-CD

on:
  pull_request:
    branches: ["develop"]
    types: [closed]
  workflow_dispatch:    

jobs:
  CI:
    if: github.event.pull_request.merged == true || github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest
    outputs:
      image-tag: ${{ steps.date.outputs.date }}.${{ github.run_number }}
    steps:
      - name: Checkout
        uses: actions/checkout@v5.0.0

      - name: Get current date
        id: date
        run: echo "date=$(date +'%Y%m%d')" >> $GITHUB_OUTPUT

      - name: Docker Login
        uses: docker/login-action@v3.6.0
        with:
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_PWD }}

      - name: Build and push Docker images
        uses: docker/build-push-action@v6.18.0
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: |
            rabberto/website-rbbsolucoes:${{ steps.date.outputs.date }}.${{ github.run_number }}
            rabberto/website-rbbsolucoes:latest

  CD-Homologacao:
    needs: CI
    runs-on: ubuntu-latest
    environment: homologacao
    steps:
      - name: Checkout
        uses: actions/checkout@v5.0.0
      
      - name: Azure Login
        uses: azure/login@v1.4.6
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Create Container App Environment (if not exists)
        run: |
          if ! az containerapp env show --name "rbb-website-hml" --resource-group "rbb-website-rg" >/dev/null 2>&1; then
            az containerapp env create --name "rbb-website-hml" --resource-group "rbb-website-rg" --location "Brazil South"
          fi

      - name: Deploy to Homologacao
        uses: azure/container-apps-deploy-action@v1
        with:
          imageToDeploy: rabberto/website-rbbsolucoes:${{ needs.CI.outputs.image-tag }}
          containerAppName: 'website-rbbsolucoes-hml'
          resourceGroup: 'rbb-website-rg'
          containerAppEnvironment: 'rbb-website-hml'
          replaceExistingImage: true
          waitForDeployment: true
          timeout: '600'
          cpu: '0.25'
          memory: '512Mi'
          minReplicas: '1'
          targetPort: '8080'
          ingress: 'external'

      - name: Set Environment Variables - Homologacao
        run: |
          az containerapp update \
            --name 'website-rbbsolucoes-hml' \
            --resource-group 'rbb-website-rg' \
            --set-env-vars \
              ASPNETCORE_ENVIRONMENT=Staging \
              mongoDbSettings__connectionString="${{ secrets.MONGODB_CONNECTION_STRING_HML }}" \
              mongoDbSettings__databaseName="${{ secrets.MONGODB_DATABASE_NAME_HML }}" \
              basicAuth__username="${{ secrets.BASIC_AUTH_USERNAME }}" \
              basicAuth__password="${{ secrets.BASIC_AUTH_PASSWORD }}"

  CD-Producao:
    needs: [CI, CD-Homologacao]
    runs-on: ubuntu-latest
    environment: producao
    steps:
      - name: Checkout
        uses: actions/checkout@v5.0.0
      
      - name: Azure Login
        uses: azure/login@v1.4.6
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Create Container App Environment (if not exists)
        run: |
          if ! az containerapp env show --name "rbb-website-prod" --resource-group "rbb-website-rg" >/dev/null 2>&1; then
            az containerapp env create --name "rbb-website-prod" --resource-group "rbb-website-rg" --location "Brazil South"
          fi

      - name: Deploy to Producao
        uses: azure/container-apps-deploy-action@v1
        with:
          imageToDeploy: rabberto/website-rbbsolucoes:${{ needs.CI.outputs.image-tag }}
          containerAppName: 'website-rbbsolucoes'
          resourceGroup: 'rbb-website-rg'
          containerAppEnvironment: 'rbb-website-prod'
          replaceExistingImage: true
          waitForDeployment: true
          timeout: '600'
          cpu: '0.5'
          memory: '1Gi'
          minReplicas: '2'
          targetPort: '8080'
          ingress: 'external'

      - name: Set Environment Variables - Producao
        run: |
          az containerapp update \
            --name 'website-rbbsolucoes' \
            --resource-group 'rbb-website-rg' \
            --set-env-vars \
              ASPNETCORE_ENVIRONMENT=Production \
              mongoDbSettings__connectionString="${{ secrets.MONGODB_CONNECTION_STRING }}" \
              mongoDbSettings__databaseName="${{ secrets.MONGODB_DATABASE_NAME }}" \
              basicAuth__username="${{ secrets.BASIC_AUTH_USERNAME }}" \
              basicAuth__password="${{ secrets.BASIC_AUTH_PASSWORD }}"